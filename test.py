import matplotlib.pyplot as plt
from mpl_toolkits.mplot3d import Axes3D

# Your 2D list of vectors
data3 = """
sdfsdf old-> 1 0 0
player_input.jsx:66 new-> 0.9987523388778449 0.049937616943892246 0
player_input.jsx:63 old-> 0.9987501538977424 0.04993750769488712 0.0020917491387513576
player_input.jsx:66 new-> 0.9950102379671816 0.09975050641027794 0.002112536718298971
player_input.jsx:63 old-> 0.995003621606865 0.09974917388718078 0.004230283447713861
player_input.jsx:66 new-> 0.988780761929808 0.14931324651581002 0.004261367435143482
player_input.jsx:63 old-> 0.988769624495724 0.1493104261468074 0.0064051790329143436
player_input.jsx:66 new-> 0.9800793719061918 0.1985018970179964 0.006435964902131209
player_input.jsx:63 old-> 0.9800636458403252 0.1984973221088992 0.008605998940614137
player_input.jsx:66 new-> 0.9689277524402097 0.24719345881716406 0.008625802523293927
player_input.jsx:63 old-> 0.9689104992961751 0.24718758050444042 0.010523516427385563
player_input.jsx:66 new-> 0.9553569013853125 0.29526691290300244 0.010518608281776344
player_input.jsx:63 old-> 0.955332529691343 0.29525847480563056 0.012735413970190899
player_input.jsx:66 new-> 0.9393951441471271 0.34260106333577256 0.012699391875072996
player_input.jsx:63 old-> 0.939361716905278 0.3425889920566114 0.015242943757800265
player_input.jsx:66 new-> 0.9210804585242021 0.38907675617121 0.0151679508218773
player_input.jsx:63 old-> 0.9210512185048023 0.38906363667546284 0.01715049584363931
player_input.jsx:66 new-> 0.9004720881893594 0.43458071223217937 0.017018312127425415
player_input.jsx:63 old-> 0.9004280410743716 0.4345623582512563 0.01961885924504013
player_input.jsx:66 new-> 0.877602527417336 0.47899523939336086 0.019425872160633444
player_input.jsx:63 old-> 0.8775590248543315 0.4789742605835914 0.02176730564669759
player_input.jsx:66 new-> 0.8525445301234601 0.5222122637633873 0.021498272760562383
player_input.jsx:63 old-> 0.852496500700148 0.5221875970828728 0.023871106945801336
player_input.jsx:66 new-> 0.8253558370760854 0.5641230219315133 0.023515066049067793
player_input.jsx:63 old-> 0.8253112209352522 0.5640965311720669 0.025622102138674847
player_input.jsx:66 new-> 0.7961126388062334 0.6046249931130189 0.025165135327624467
player_input.jsx:63 old-> 0.7960564253505402 0.6045930043476275 0.027594687025395175
player_input.jsx:66 new-> 0.7648731384081766 0.643613590485899 0.027030136578940843
player_input.jsx:63 old-> 0.7648126968990099 0.6435771039553708 0.029496608728481248
player_input.jsx:66 new-> 0.7317230562899536 0.6809927623983645 0.028813650493022955
player_input.jsx:63 old-> 0.7316582473456716 0.6809514191047951 0.03132688797544211
player_input.jsx:66 new-> 0.6967454142292263 0.7166691559488219 0.030514728610087253
player_input.jsx:63 old-> 0.6966763011875617 0.7166226273161138 0.033077808001258875
player_input.jsx:66 new-> 0.6600280301149323 0.7505537418953467 0.03212600176641493
player_input.jsx:63 old-> 0.659954676971017 0.7505016784931234 0.034742695967427545
player_input.jsx:66 new-> 0.6216631205428275 0.782561998411948 0.033640499378763754
player_input.jsx:63 old-> 0.6215852759927902 0.7825039542042125 0.03632225658929529
player_input.jsx:66 new-> 0.581746746256083 0.8126140495276296 0.035058946515372426
player_input.jsx:63 old-> 0.581664736822908 0.8125497195869164 0.03780326885284944
player_input.jsx:66 new-> 0.5403794381357557 0.8406351011162754 0.03636879997078423
player_input.jsx:63 old-> 0.5402936512309278 0.8405641985675539 0.03917395213708306
player_input.jsx:66 new-> 0.49766548388245946 0.8665555296712482 0.0375576909330176
player_input.jsx:63 old-> 0.49757598797049574 0.8664777005794245 0.04042932838643443
player_input.jsx:66 new-> 0.4537122622256673 0.8903109700206688 0.03862071681006608
player_input.jsx:63 old-> 0.45361869280023215 0.890225700971189 0.041572621670567335
player_input.jsx:66 new-> 0.40862986145778424 0.9118423930818568 0.03956117419573084
player_input.jsx:63 old-> 0.4085325764737112 0.9117493790037512 0.04259347187099648
player_input.jsx:66 new-> 0.362531959969423 0.9310966330946355 0.04036877308715618
player_input.jsx:63 old-> 0.3623929311895764 0.9309810167820487 0.044110200807634586
player_input.jsx:66 new-> 0.31549605098786265 0.9480116087978859 0.04166811005443448
player_input.jsx:63 old-> 0.31542885199779996 0.9479140729750488 0.044311957564567094
player_input.jsx:66 new-> 0.26775482590517075 0.9625873788819013 0.041628010062491845
player_input.jsx:63 old-> 0.2676451264218636 0.9624678702640966 0.04496315171247061
player_input.jsx:66 new-> 0.21931361348251238 0.974748477166838 0.04203504730785606
player_input.jsx:63 old-> 0.21922094343501952 0.9746281854692277 0.04518935768984704
player_input.jsx:66 new-> 0.17035403933546425 0.9844872605101932 0.04200398999174135
player_input.jsx:63 old-> 0.17023500722014687 0.9843486829750011 0.04558193328652777
player_input.jsx:66 new-> 0.12095567854202927 0.9917633325328806 0.04213331308729598
player_input.jsx:63 old-> 0.12083050898426545 0.991613095329028 0.045863463351422364
player_input.jsx:66 new-> 0.0712630615895172 0.9965669248309045 0.04214190771622733
player_input.jsx:63 old-> 0.07113152658020507 0.9964042084638246 0.0460321548697089
player_input.jsx:66 new-> 0.02140100299380843 0.9988871965849451 0.04202815210698955
player_input.jsx:63 old-> 0.02126214808698368 0.9987107661195433 0.046094757789166094
player_input.jsx:66 new-> -0.028506001469158167 0.998719305290945 0.0417990085936589
player_input.jsx:63 old-> -0.02865399752786691 0.9985273073923299 0.04606696015038148
player_input.jsx:66 new-> -0.07833424680248903 0.996064230545858 0.041470403964449246
player_input.jsx:63 old-> -0.0784921220490933 0.9958551248962724 0.04595168107980583
player_input.jsx:66 new-> -0.1279592058075049 0.990929717688418 0.04104553874740841
player_input.jsx:63 old-> -0.12812853018966025 0.9907012965033826 0.0457604726587748
player_input.jsx:66 new-> -0.17725778623577979 0.9833292861729542 0.040536306854213576
player_input.jsx:63 old-> -0.17744032523594208 0.9830788826747225 0.04550649864779934
player_input.jsx:66 new-> -0.22610803922102668 0.9732824105953977 0.03995627391580296
player_input.jsx:63 old-> -0.22627406363889524 0.9730281536197478 0.04490278819500841
player_input.jsx:66 new-> -0.2743574967643007 0.9608359519870117 0.03901586008843188
player_input.jsx:63 old-> -0.2746061402686514 0.9605094124763135 0.044867987152991354
player_input.jsx:66 new-> -0.3219851753242088 0.9459557036434152 0.03864393375330465
player_input.jsx:63 old-> -0.3222201613118174 0.9456169780145304 0.04452750312844534
player_input.jsx:66 new-> -0.36877568595506527 0.9287431294926148 0.03795646016997792
player_input.jsx:63 old-> -0.3689970680343334 0.9283939797844102 0.04388373368493105
player_input.jsx:66 new-> -0.41461224915045547 0.9092474386685505 0.036956435557037336
player_input.jsx:63 old-> -0.4148917723895348 0.9088276341226472 0.04355627002513551
player_input.jsx:66 new-> -0.4594531974979029 0.8874610733625721 0.036271236194879944
player_input.jsx:63 old-> -0.459794691150719 0.8869547871407261 0.04358953495696316
player_input.jsx:66 new-> -0.5031920059263628 0.8634267184391687 0.03594589068546884
player_input.jsx:63 old-> -0.5035229970930745 0.862891308375334 0.043395637208274836
player_input.jsx:66 new-> -0.5456485786051842 0.8372666010243485 0.035387391473185516
player_input.jsx:63 old-> -0.5459690405570812 0.8367021208946587 0.04298101492008257
player_input.jsx:66 new-> -0.5867189614894102 0.8090509518297632 0.03460372194059676
player_input.jsx:63 old-> -0.5871035671951307 0.8083699137202155 0.04298236823075817
player_input.jsx:66 new-> -0.6263785797503508 0.778766691177314 0.03423909377701955
player_input.jsx:63 old-> -0.6267865232875484 0.7779974372954481 0.04311196802307883
player_input.jsx:66 new-> -0.6644914006756093 0.7465218674037262 0.034004116165848405
player_input.jsx:63 old-> -0.6649190873131852 0.7456541176481976 0.04338829520606962
player_input.jsx:66 new-> -0.7009632095772638 0.7123904016343834 0.03391893981749539
"""

# Split the lines and clean up the data
lines3 = data3.strip().split('\n')
data = [line.split()[1:] for line in lines3]
new = [i[1:] for i in data if i[0]=='new->']  # remove empty lists
old = [i[1:] for i in data if i[0]=='old->']  # remove empty lists
result3old = [[float(coord) for coord in vector] for vector in old]
result3new = [[float(coord) for coord in vector] for vector in new]

# Create a figure and a 3D axis
fig = plt.figure()
ax = fig.add_subplot(111, projection='3d')

# Extract x, y, and z coordinates from vectors
x3old, y3old, z3old = zip(*result3old)
x3new, y3new, z3new = zip(*result3new)

# Scatter plot
ax.scatter(x3old, y3old, z3old, c='b', marker='o')
ax.scatter(x3new, y3new, z3new, c='r', marker='o')

# Connect old and new points with lines
for x_o, y_o, z_o, x_n, y_n, z_n in zip(x3old, y3old, z3old, x3new, y3new, z3new):
    ax.plot([x_o, x_n], [y_o, y_n], [z_o, z_n], c='k', linestyle='--', alpha=0.5)

# Set labels
ax.set_xlabel('X-axis')
ax.set_ylabel('Y-axis')
ax.set_zlabel('Z-axis')

# Show the plot
plt.show()
